<?xml version="1.0"?>
<opml version="2.0">
	<head>
		<title>DocServerLookup</title>
		<dateCreated>Sat, 27 Nov 2021 00:53:48 GMT</dateCreated>
		<rd-repository>drumkit-tests</rd-repository>
		<rd-path>DocServerLookup/DocServerLookup.opml</rd-path>
		<rd-type>opml</rd-type>
		<ownerTwitterScreenName>PostMonsterG</ownerTwitterScreenName>
		<ownerName>Gary Teter</ownerName>
		<ownerId>http://twitter.com/PostMonsterG</ownerId>
		<dateModified>Sat, 25 Dec 2021 00:06:53 GMT</dateModified>
		<expansionState>1,6,9</expansionState>
		<lastCursor>0</lastCursor>
		</head>
	<body>
		<outline text="Question" created="Tue, 23 Nov 2021 08:05:10 GMT">
			<outline text="This Drumkit makes it easier to look up verbs in DocServer. " created="Sun, 21 Nov 2021 01:37:48 GMT" isComment="true"/>
			<outline text="Created by Gary Teter" created="Sun, 21 Nov 2021 01:45:54 GMT" isComment="true"/>
			<outline text="This is the eighth version." created="Sun, 21 Nov 2021 01:47:09 GMT" isComment="true"/>
			<outline text="" created="Fri, 24 Dec 2021 23:23:11 GMT" isComment="true"/>
			<outline text="&lt;b&gt;To use this&lt;/b&gt;" created="Tue, 23 Nov 2021 16:21:26 GMT" isComment="true">
				<outline text="Select some text, and click the icon." created="Sun, 21 Nov 2021 01:46:51 GMT" isComment="true"/>
				<outline text="Any documentation we find will be inserted beneath the current node." created="Sun, 21 Nov 2021 01:49:50 GMT" isComment="true"/>
				</outline>
			<outline text="&lt;b&gt;To install this&lt;/b&gt;" created="Tue, 23 Nov 2021 16:23:24 GMT" isComment="true">
				<outline text="&lt;b&gt;Open the latest version of this Drumkit in Drummer&lt;/b&gt;" created="Tue, 07 Dec 2021 08:21:57 GMT">
					<outline text="&lt;b&gt;File → Open URL...&lt;/b&gt;" created="Tue, 07 Dec 2021 08:24:20 GMT"/>
					<outline text=" https://raw.githubusercontent.com/PostMonsterG/drumkit-minutes/main/DocServerLookup.opml " created="Tue, 07 Dec 2021 08:04:55 GMT" isComment="true"/>
					</outline>
				<outline text="&lt;b&gt;Add this Drumkit to your iconbar in Drummer&lt;/b&gt;" created="Tue, 07 Dec 2021 08:10:02 GMT" isComment="true">
					<outline text="Select this entire outline, i.e., the above &quot;Question&quot; node that contains all this" created="Mon, 22 Nov 2021 01:30:51 GMT" isComment="true"/>
					<outline text="Copy it (⌘C)" created="Mon, 22 Nov 2021 01:34:09 GMT" isComment="true"/>
					<outline text="&lt;b&gt;File → Special Files... → Iconbar... &lt;/b&gt;" created="Sun, 21 Nov 2021 01:54:15 GMT" isComment="true"/>
					<outline text="Paste this outline (⌘V)" created="Sun, 21 Nov 2021 01:55:14 GMT" isComment="true"/>
					<outline text="There should be a new question mark in your icon bar" created="Mon, 22 Nov 2021 01:33:34 GMT" isComment="true"/>
					</outline>
				</outline>
			<outline text="//    &lt;b&gt;Here is the code&lt;/b&gt;" created="Tue, 23 Nov 2021 15:51:55 GMT">
				<outline text="const selection    = GetSelectedText() " created="Tue, 23 Nov 2021 07:49:48 GMT"/>
				<outline text="const cleaned       = CleanText( selection ) " created="Tue, 23 Nov 2021 07:51:34 GMT" isComment="false"/>
				<outline text="const verb             = ExtractDrumkitVerb( cleaned )" created="Tue, 23 Nov 2021 07:53:23 GMT" isComment="false"/>
				<outline text="const found          = InsertDrumkitVerbDocs( verb ) " created="Sat, 27 Nov 2021 01:25:01 GMT" isComment="false"/>
				<outline text="if ( !found ) { speaker.beep() }" created="Tue, 23 Nov 2021 15:33:46 GMT"/>
				<outline text="" created="Sat, 27 Nov 2021 04:09:52 GMT"/>
				<outline text="//    &lt;b&gt;Functions&lt;/b&gt;" created="Tue, 23 Nov 2021 05:22:08 GMT">
					<outline text="//    &lt;b&gt;Get the selected text&lt;/b&gt;" created="Tue, 23 Nov 2021 05:53:30 GMT" isComment="false">
						<outline text="function GetSelectedText() {" created="Tue, 23 Nov 2021 07:47:50 GMT">
							<outline text="&lt;b&gt;Description&lt;/b&gt;" created="Thu, 25 Nov 2021 17:40:49 GMT" isComment="true">
								<outline text="We attempt to get the current selection. If we can't, we get the text of the current node. " created="Thu, 25 Nov 2021 17:41:51 GMT" isComment="true"/>
								<outline text="" created="Thu, 25 Nov 2021 17:45:36 GMT" isComment="true"/>
								<outline text="&lt;i&gt;Params&lt;/i&gt;" created="Thu, 25 Nov 2021 17:37:41 GMT" isComment="true">
									<outline text="None" created="Thu, 25 Nov 2021 17:38:25 GMT" isComment="false"/>
									</outline>
								<outline text="&lt;i&gt;Input&lt;/i&gt;" created="Sun, 28 Nov 2021 18:10:28 GMT" isComment="true">
									<outline text="The currently selected text" created="Sun, 28 Nov 2021 18:11:51 GMT" isComment="true"/>
									<outline text="The current node" created="Sun, 28 Nov 2021 18:11:39 GMT" isComment="true"/>
									</outline>
								<outline text="&lt;i&gt;Returns&lt;/i&gt;" created="Thu, 25 Nov 2021 17:39:27 GMT" isComment="true">
									<outline text="A string containing the selected text" created="Sun, 28 Nov 2021 18:13:30 GMT"/>
									<outline text="This method will return an empty string rather than undefined" created="Sun, 28 Nov 2021 18:13:18 GMT"/>
									</outline>
								</outline>
							<outline text="" created="Fri, 26 Nov 2021 19:09:00 GMT" isComment="false"/>
							<outline text="var term = op.getSelectedText()" created="Tue, 23 Nov 2021 05:53:43 GMT"/>
							<outline text="if ( term == &quot;&quot; ) { " created="Sun, 21 Nov 2021 00:46:40 GMT">
								<outline text=" term = op.getLineText()" created="Sun, 21 Nov 2021 00:47:05 GMT"/>
								<outline text="}" created="Sun, 21 Nov 2021 00:46:59 GMT"/>
								</outline>
							<outline text="return term" created="Tue, 23 Nov 2021 08:09:12 GMT"/>
							<outline text="}" created="Tue, 23 Nov 2021 07:48:06 GMT"/>
							<outline text="" created="Tue, 23 Nov 2021 07:59:27 GMT"/>
							</outline>
						</outline>
					<outline text="//    &lt;b&gt;Clean up the selection&lt;/b&gt;" created="Tue, 23 Nov 2021 05:55:40 GMT" isComment="false">
						<outline text="function CleanText( term ) {" created="Tue, 23 Nov 2021 07:43:08 GMT">
							<outline text="&lt;b&gt;Description&lt;/b&gt;" created="Thu, 25 Nov 2021 17:40:49 GMT" isComment="true">
								<outline text="We strip markup, convert punctuation—except periods—to spaces, collapse space runs, and trim white space. " created="Thu, 25 Nov 2021 17:41:51 GMT" isComment="true"/>
								<outline text="" created="Thu, 25 Nov 2021 17:45:36 GMT" isComment="true"/>
								<outline text="&lt;i&gt;Params&lt;/i&gt;" created="Thu, 25 Nov 2021 17:37:41 GMT" isComment="true">
									<outline text="&lt;b&gt;term&lt;/b&gt; is the string to be cleaned" created="Thu, 25 Nov 2021 17:38:25 GMT" isComment="false"/>
									</outline>
								<outline text="&lt;i&gt;Returns&lt;/i&gt;" created="Thu, 25 Nov 2021 17:39:27 GMT" isComment="true">
									<outline text="Cleaned version of the string" created="Thu, 25 Nov 2021 17:39:30 GMT" isComment="true"/>
									<outline text="This method will return an empty string rather than undefined" created="Sun, 28 Nov 2021 18:26:23 GMT"/>
									</outline>
								</outline>
							<outline text="" created="Fri, 26 Nov 2021 19:09:07 GMT" isComment="false"/>
							<outline text="if (term != &quot;&quot;) {" created="Sun, 21 Nov 2021 00:55:18 GMT" isComment="false">
								<outline text="term = string.stripMarkup( term ) " created="Tue, 23 Nov 2021 06:21:31 GMT"/>
								<outline text="term = string.multipleReplaceAll( term, { " created="Sun, 21 Nov 2021 01:06:11 GMT">
									<outline text="&quot;(&quot;    :     &quot; &quot;," created="Sun, 21 Nov 2021 01:07:53 GMT"/>
									<outline text="&quot;)&quot;    :     &quot; &quot;," created="Sun, 21 Nov 2021 01:08:52 GMT"/>
									<outline text="&quot;;&quot;    :     &quot; &quot;," created="Sun, 21 Nov 2021 01:09:14 GMT"/>
									<outline text="&quot;{&quot;    :     &quot; &quot;," created="Sun, 21 Nov 2021 01:08:52 GMT"/>
									<outline text="&quot;}&quot;    :     &quot; &quot;," created="Sun, 21 Nov 2021 01:08:52 GMT"/>
									<outline text="&quot;+&quot;   :     &quot; &quot;," created="Sun, 21 Nov 2021 01:08:52 GMT"/>
									<outline text="&quot;-&quot;    :     &quot; &quot;," created="Sun, 21 Nov 2021 01:08:52 GMT"/>
									<outline text="&quot;?&quot;    :     &quot; &quot;," created="Sun, 21 Nov 2021 01:08:52 GMT"/>
									<outline text="&quot;/&quot;    :     &quot; &quot;," created="Sun, 21 Nov 2021 01:08:52 GMT"/>
									<outline text="&quot;\&quot;&quot;  :     &quot; &quot;," created="Sun, 21 Nov 2021 02:46:04 GMT"/>
									<outline text="&quot;=&quot;   :     &quot; &quot;," created="Tue, 23 Nov 2021 06:23:47 GMT"/>
									<outline text="})" created="Sun, 21 Nov 2021 01:07:16 GMT"/>
									</outline>
								<outline text="term = string.multipleReplaceAll( term, {" created="Tue, 23 Nov 2021 06:24:56 GMT">
									<outline text="&quot;   &quot;  :  &quot; &quot;," created="Tue, 23 Nov 2021 06:25:14 GMT"/>
									<outline text="&quot;  &quot;   :  &quot; &quot;," created="Tue, 23 Nov 2021 06:25:41 GMT"/>
									<outline text="})" created="Tue, 23 Nov 2021 06:25:16 GMT"/>
									</outline>
								<outline text="term = string.trimWhitespace( term )" created="Sun, 21 Nov 2021 00:46:23 GMT"/>
								<outline text="}" created="Sun, 21 Nov 2021 01:22:36 GMT"/>
								</outline>
							<outline text="return term" created="Tue, 23 Nov 2021 08:08:51 GMT"/>
							<outline text="}" created="Tue, 23 Nov 2021 07:43:43 GMT"/>
							<outline text="" created="Tue, 23 Nov 2021 07:44:17 GMT"/>
							</outline>
						</outline>
					<outline text="//    &lt;b&gt;Extract a Drumkit verb&lt;/b&gt;" created="Tue, 23 Nov 2021 15:34:51 GMT" isComment="false">
						<outline text="function ExtractDrumkitVerb( term ) { " created="Tue, 23 Nov 2021 07:48:33 GMT">
							<outline text="&lt;b&gt;Description&lt;/b&gt;" created="Thu, 25 Nov 2021 17:40:49 GMT" isComment="true">
								<outline text="If the provided term contains a Drumkit verb, we'll return it. Otherwise, we'll return undefined. " created="Thu, 25 Nov 2021 17:41:51 GMT" isComment="true"/>
								<outline text="" created="Thu, 25 Nov 2021 17:45:36 GMT" isComment="true"/>
								<outline text="&lt;i&gt;Params&lt;/i&gt;" created="Thu, 25 Nov 2021 17:37:41 GMT" isComment="true">
									<outline text="&lt;b&gt;term&lt;/b&gt; is the string to be validated" created="Thu, 25 Nov 2021 17:38:25 GMT" isComment="false"/>
									</outline>
								<outline text="&lt;i&gt;Returns&lt;/i&gt;" created="Thu, 25 Nov 2021 17:39:27 GMT" isComment="true">
									<outline text="&lt;b&gt;term&lt;/b&gt;, if it is a valid Drumkit verb, or undefined if it isn't" created="Thu, 25 Nov 2021 17:39:30 GMT" isComment="true"/>
									</outline>
								</outline>
							<outline text="" created="Fri, 26 Nov 2021 19:09:15 GMT"/>
							<outline text="if ( term === undefined ) { return term }" created="Sat, 27 Nov 2021 01:27:37 GMT"/>
							<outline text="const num_fields = string.countFields( term, &quot;  &quot; )" created="Sun, 21 Nov 2021 01:15:04 GMT"/>
							<outline text="const categories = GetDrumkitVerbDocs().opml.body.subs" created="Thu, 23 Dec 2021 01:20:21 GMT"/>
							<outline text="for ( let i = num_fields; i &gt; 0; i-- ) {" created="Sun, 21 Nov 2021 01:12:48 GMT" isComment="false">
								<outline text="const searchterm = string.lower( string.nthField( term, &quot; &quot;, i ) )" created="Sun, 21 Nov 2021 01:18:19 GMT"/>
								<outline text="for ( const category of categories ) {" created="Sat, 27 Nov 2021 01:58:37 GMT">
									<outline text="for ( const verb of category.subs ) {" created="Sat, 27 Nov 2021 02:25:45 GMT">
										<outline text="if ( string.lower( verb.text ) == searchterm ) {" created="Sat, 27 Nov 2021 02:29:50 GMT">
											<outline text="return verb.text" created="Wed, 22 Dec 2021 19:06:31 GMT"/>
											<outline text="}" created="Sat, 27 Nov 2021 02:33:22 GMT"/>
											</outline>
										<outline text="}" created="Sat, 27 Nov 2021 02:27:02 GMT"/>
										</outline>
									<outline text="}" created="Sat, 27 Nov 2021 01:58:55 GMT"/>
									</outline>
								<outline text="}" created="Sun, 21 Nov 2021 00:59:38 GMT"/>
								</outline>
							<outline text="return undefined" created="Tue, 23 Nov 2021 15:36:27 GMT"/>
							<outline text="}" created="Tue, 23 Nov 2021 06:13:14 GMT"/>
							<outline text="" created="Tue, 23 Nov 2021 07:59:19 GMT"/>
							</outline>
						</outline>
					<outline text="//    &lt;b&gt;Insert the Drumkit verb docs&lt;/b&gt;" created="Sat, 27 Nov 2021 01:17:16 GMT">
						<outline text="function InsertDrumkitVerbDocs( searchterm ) { " created="Tue, 23 Nov 2021 07:48:33 GMT">
							<outline text="&lt;b&gt;Description&lt;/b&gt;" created="Thu, 25 Nov 2021 17:40:49 GMT" isComment="true">
								<outline text="If we can find the documentation for the provided term, it will be inserted below the current node. " created="Thu, 25 Nov 2021 17:41:51 GMT" isComment="true"/>
								<outline text="" created="Thu, 25 Nov 2021 17:45:36 GMT" isComment="true"/>
								<outline text="&lt;i&gt;Params&lt;/i&gt;" created="Thu, 25 Nov 2021 17:37:41 GMT" isComment="true">
									<outline text="&lt;b&gt;searchterm&lt;/b&gt; is the verb to be looked up" created="Thu, 25 Nov 2021 17:38:25 GMT" isComment="false"/>
									</outline>
								<outline text="&lt;i&gt;Modifies&lt;/i&gt;" created="Sun, 28 Nov 2021 18:40:32 GMT" isComment="true">
									<outline text="Inserts a child node beneath the current outline node" created="Sun, 28 Nov 2021 18:41:48 GMT" isComment="true"/>
									</outline>
								<outline text="&lt;i&gt;Returns&lt;/i&gt;" created="Thu, 25 Nov 2021 17:39:27 GMT" isComment="true">
									<outline text="&lt;b&gt;true&lt;/b&gt; if we found documentation and inserted it" created="Thu, 25 Nov 2021 17:39:30 GMT" isComment="true"/>
									</outline>
								</outline>
							<outline text="" created="Fri, 26 Nov 2021 19:09:15 GMT"/>
							<outline text="if ( searchterm === undefined ) { return searchterm }" created="Sat, 27 Nov 2021 01:27:37 GMT"/>
							<outline text="" created="Sat, 27 Nov 2021 05:33:29 GMT"/>
							<outline text="const searchcat = string.nthField( searchterm, &quot;.&quot;, 1 ) + &quot; verbs&quot;" created="Sat, 27 Nov 2021 02:25:08 GMT"/>
							<outline text="for ( const category of GetDrumkitVerbDocs().opml.body.subs ) {" created="Sat, 27 Nov 2021 01:58:37 GMT">
								<outline text="if ( category.text == searchcat ) {" created="Sat, 27 Nov 2021 02:24:08 GMT">
									<outline text="for ( const verb of category.subs ) {" created="Sat, 27 Nov 2021 02:25:45 GMT">
										<outline text="if ( verb.text == searchterm ) {" created="Sat, 27 Nov 2021 02:29:50 GMT">
											<outline text="OpInsertExtractedOpmlSection( verb, right, 0 )" created="Sat, 27 Nov 2021 04:13:24 GMT"/>
											<outline text="return true" created="Sat, 27 Nov 2021 02:31:05 GMT"/>
											<outline text="}" created="Sat, 27 Nov 2021 02:33:22 GMT"/>
											</outline>
										<outline text="}" created="Sat, 27 Nov 2021 02:27:02 GMT"/>
										</outline>
									<outline text="}" created="Sat, 27 Nov 2021 02:24:37 GMT"/>
									</outline>
								<outline text="}" created="Sat, 27 Nov 2021 01:58:55 GMT"/>
								</outline>
							<outline text="return false" created="Sat, 27 Nov 2021 01:49:19 GMT"/>
							<outline text="}" created="Tue, 23 Nov 2021 06:13:14 GMT"/>
							<outline text="" created="Tue, 23 Nov 2021 07:59:19 GMT"/>
							</outline>
						</outline>
					<outline text="//    &lt;b&gt;Get the Drumkit verb docs from DocServer &lt;/b&gt;" created="Sat, 27 Nov 2021 19:45:38 GMT">
						<outline text="function GetDrumkitVerbDocs() {" created="Sat, 27 Nov 2021 00:56:37 GMT">
							<outline text="&lt;b&gt;Description&lt;/b&gt;" created="Thu, 25 Nov 2021 17:40:49 GMT" isComment="true">
								<outline text="We fetch &lt;b&gt;verbDocs.opml&lt;/b&gt;, the opml file that DocServer uses, and parse it into a JavaScript object. " created="Fri, 26 Nov 2021 18:03:52 GMT" isComment="true"/>
								<outline text="Then we cache that under &lt;b&gt;T.drumkit.verbDocs&lt;/b&gt;, and return it." created="Sat, 27 Nov 2021 01:00:29 GMT" isComment="true"/>
								<outline text="" created="Sat, 27 Nov 2021 00:59:26 GMT" isComment="true"/>
								<outline text="&lt;i&gt;Params&lt;/i&gt;" created="Thu, 25 Nov 2021 17:37:41 GMT" isComment="true">
									<outline text="None" created="Thu, 25 Nov 2021 17:38:25 GMT" isComment="false"/>
									</outline>
								<outline text="&lt;i&gt;Input&lt;/i&gt;" created="Sun, 28 Nov 2021 18:17:33 GMT" isComment="true">
									<outline text="http://drummer.scripting.com/davewiner/verbDocs.opml" created="Sun, 28 Nov 2021 18:17:48 GMT" isComment="true"/>
									</outline>
								<outline text="&lt;i&gt;Modifies&lt;/i&gt;" created="Sun, 28 Nov 2021 18:18:50 GMT" isComment="true">
									<outline text="&lt;b&gt;T.drumkit.verbDocs&lt;/b&gt;" created="Sun, 28 Nov 2021 18:19:11 GMT" isComment="true"/>
									</outline>
								<outline text="&lt;i&gt;Returns&lt;/i&gt;" created="Thu, 25 Nov 2021 17:39:27 GMT" isComment="true">
									<outline text="The verbDocs as a JavaScript object" created="Thu, 25 Nov 2021 17:39:30 GMT" isComment="true"/>
									<outline text="This method returns an empty object rather than undefined" created="Sun, 28 Nov 2021 18:37:03 GMT"/>
									</outline>
								</outline>
							<outline text="" created="Sun, 28 Nov 2021 18:19:54 GMT" isComment="false"/>
							<outline text="const T = Garytown()" created="Sat, 27 Nov 2021 00:56:46 GMT"/>
							<outline text="" created="Sat, 27 Nov 2021 01:08:51 GMT"/>
							<outline text="if (T.drumkit == undefined) { T.drumkit = new Object() }" created="Tue, 23 Nov 2021 03:42:34 GMT"/>
							<outline text="if (T.drumkit.verbDocs == undefined) {" created="Tue, 23 Nov 2021 07:34:27 GMT">
								<outline text="const url                       = &quot;http://drummer.scripting.com/davewiner/verbDocs.opml&quot;" created="Sat, 27 Nov 2021 00:59:11 GMT"/>
								<outline text="const docs                   = FetchOpmlWithIncludes( url )" created="Wed, 22 Dec 2021 20:13:10 GMT"/>
								<outline text="T.drumkit.verbDocs = docs" created="Tue, 23 Nov 2021 05:26:43 GMT" isComment="false"/>
								<outline text="}" created="Tue, 23 Nov 2021 07:34:52 GMT"/>
								</outline>
							<outline text="return T.drumkit.verbDocs" created="Sat, 27 Nov 2021 01:08:54 GMT"/>
							<outline text="}" created="Sat, 27 Nov 2021 00:56:48 GMT"/>
							</outline>
						</outline>
					<outline text="//    &lt;b&gt;Insert an extracted section of OPML&lt;/b&gt;" created="Sat, 27 Nov 2021 19:40:30 GMT">
						<outline text="function OpInsertExtractedOpmlSection( node, direction, level ) {" created="Sat, 27 Nov 2021 04:15:30 GMT" isComment="false">
							<outline text="&lt;b&gt;Description&lt;/b&gt;" created="Sun, 28 Nov 2021 19:06:00 GMT" isComment="true">
								<outline text="This method inserts nodes from a JavaScript Opml outline into the current outline." created="Sun, 28 Nov 2021 19:09:48 GMT" isComment="true"/>
								<outline text="This can be useful for working with things like DocServer files." created="Sun, 28 Nov 2021 19:21:23 GMT" isComment="true"/>
								<outline text="Every node inserted will be marked as a comment. " created="Sun, 28 Nov 2021 19:20:11 GMT" isComment="true"/>
								<outline text="See below for details about other special handling for inserted nodes." created="Sun, 28 Nov 2021 19:21:12 GMT" isComment="true"/>
								<outline text="" created="Sun, 28 Nov 2021 19:10:59 GMT" isComment="true"/>
								<outline text="&lt;i&gt;Params&lt;/i&gt;" created="Sun, 28 Nov 2021 19:11:51 GMT" isComment="true">
									<outline text="&lt;b&gt;node&lt;/b&gt; is the JavaScript object for the Opml to be inserted" created="Sun, 28 Nov 2021 19:13:33 GMT" isComment="true"/>
									<outline text="&lt;b&gt;direction&lt;/b&gt; is either &lt;b&gt;right&lt;/b&gt;, or &lt;b&gt;down&lt;/b&gt;" created="Sun, 28 Nov 2021 19:14:11 GMT" isComment="true"/>
									<outline text="&lt;b&gt;level&lt;/b&gt; is an integer representing the current nesting" created="Sun, 28 Nov 2021 19:17:10 GMT" isComment="true">
										<outline text="Text for nodes with level 0 will be wrapped in HTML bold tags" created="Sun, 28 Nov 2021 19:17:39 GMT" isComment="true"/>
										<outline text="Text for nodes with level 1 will be wrapped in HTML italics tags" created="Sun, 28 Nov 2021 19:18:21 GMT" isComment="true"/>
										<outline text="Nodes at levels greater than 1, which have subnodes, will be automatically collapsed" created="Sun, 28 Nov 2021 19:18:58 GMT" isComment="true"/>
										</outline>
									</outline>
								<outline text="&lt;i&gt;Modifies&lt;/i&gt;" created="Sun, 28 Nov 2021 19:11:57 GMT" isComment="true">
									<outline text="Inserts child or sibling nodes at the current node" created="Sun, 28 Nov 2021 19:12:01 GMT" isComment="true"/>
									</outline>
								<outline text="&lt;i&gt;Returns&lt;/i&gt;" created="Sun, 28 Nov 2021 19:13:04 GMT" isComment="true">
									<outline text="undefined" created="Sun, 28 Nov 2021 19:13:12 GMT" isComment="true"/>
									</outline>
								<outline text="&lt;i&gt;See also&lt;/i&gt;" created="Sun, 28 Nov 2021 19:11:10 GMT" isComment="true">
									<outline text="opml.parse()" created="Sun, 28 Nov 2021 19:11:17 GMT" isComment="true"/>
									</outline>
								<outline text="&lt;i&gt;Note&lt;/i&gt;" created="Sun, 28 Nov 2021 19:15:08 GMT" isComment="true">
									<outline text="By itself, opml.parse() reverses the order of the nodes. If you want to preserve the ordering in the original file, you should reverse them before using this method." created="Sun, 28 Nov 2021 19:15:28 GMT" isComment="true"/>
									</outline>
								</outline>
							<outline text="" created="Sun, 28 Nov 2021 19:11:01 GMT"/>
							<outline text="var label = node.text" created="Sat, 27 Nov 2021 04:59:02 GMT"/>
							<outline text="" created="Sun, 28 Nov 2021 21:58:04 GMT"/>
							<outline text="//   &lt;i&gt;Insert the node, add formatting, and mark it as a comment&lt;/i&gt;" created="Mon, 29 Nov 2021 21:07:56 GMT">
								<outline text="if ( level == 0 ) { label = &quot;&lt;b&gt;&quot; + node.text + &quot;&lt;/b&gt;&quot; }" created="Sat, 27 Nov 2021 04:59:09 GMT" isComment="false"/>
								<outline text="if ( level == 1) { label = &quot;&lt;i&gt;&quot; + node.text + &quot;&lt;/i&gt;&quot; }" created="Sat, 27 Nov 2021 08:39:04 GMT" isComment="false"/>
								<outline text="op.insert( label, direction )" created="Sat, 27 Nov 2021 04:15:48 GMT"/>
								<outline text="I don't know why the op.bold and op.italic verbs aren't working for me but I sure wish they would" created="Sun, 28 Nov 2021 21:52:58 GMT" isComment="true"/>
								<outline text="if ( level == 0 ) { op.bold() }" created="Sat, 27 Nov 2021 04:59:09 GMT" isComment="true"/>
								<outline text=" if (level == 1) { op.italic() }" created="Sat, 27 Nov 2021 05:07:55 GMT" isComment="true"/>
								<outline text="op.makeComment()" created="Sat, 27 Nov 2021 04:16:20 GMT"/>
								</outline>
							<outline text="" created="Sat, 27 Nov 2021 08:30:52 GMT"/>
							<outline text="var newdirection = right" created="Sat, 27 Nov 2021 04:16:41 GMT"/>
							<outline text="for ( const sub of node.subs ) {" created="Sat, 27 Nov 2021 04:21:51 GMT">
								<outline text="if ( sub.subs != undefined ) {" created="Sat, 27 Nov 2021 04:28:45 GMT">
									<outline text="const cursor = op.getCursor()" created="Sat, 27 Nov 2021 04:41:23 GMT"/>
									<outline text="OpInsertExtractedOpmlSection( sub, right, level + 1 )" created="Sat, 27 Nov 2021 04:29:31 GMT"/>
									<outline text="op.setCursor( cursor )" created="Sat, 27 Nov 2021 04:41:36 GMT"/>
									<outline text="if ( level &gt; 1 ) {" created="Sat, 27 Nov 2021 05:00:12 GMT">
										<outline text="op.collapse()" created="Sat, 27 Nov 2021 05:00:38 GMT"/>
										<outline text="}" created="Sat, 27 Nov 2021 05:00:40 GMT"/>
										</outline>
									<outline text="}" created="Sat, 27 Nov 2021 04:29:33 GMT"/>
									</outline>
								<outline text="else {" created="Sat, 27 Nov 2021 04:30:11 GMT">
									<outline text="op.insert(sub.text, newdirection )" created="Sat, 27 Nov 2021 04:22:37 GMT"/>
									<outline text="op.makeComment()" created="Sat, 27 Nov 2021 04:24:07 GMT"/>
									<outline text="newdirection = down" created="Sat, 27 Nov 2021 04:23:13 GMT"/>
									<outline text="}" created="Sat, 27 Nov 2021 04:30:20 GMT"/>
									</outline>
								<outline text="}" created="Sat, 27 Nov 2021 04:22:39 GMT"/>
								</outline>
							<outline text="" created="Sat, 27 Nov 2021 04:16:53 GMT"/>
							<outline text="}" created="Sat, 27 Nov 2021 04:15:48 GMT"/>
							</outline>
						</outline>
					<outline text="//    &lt;b&gt;Fetch and parse OPML, fetching included OPML&lt;/b&gt;" created="Wed, 22 Dec 2021 19:57:37 GMT">
						<outline text="function FetchOpmlWithIncludes( url ) {" created="Sat, 27 Nov 2021 00:56:37 GMT">
							<outline text="&lt;b&gt;Description&lt;/b&gt;" created="Thu, 25 Nov 2021 17:40:49 GMT" isComment="true">
								<outline text="Fetches and parses the OPML at url, resolving includes  for top-level subs" created="Fri, 26 Nov 2021 18:03:52 GMT" isComment="true"/>
								<outline text="" created="Sat, 27 Nov 2021 00:59:26 GMT" isComment="true"/>
								<outline text="&lt;i&gt;Params&lt;/i&gt;" created="Thu, 25 Nov 2021 17:37:41 GMT" isComment="true">
									<outline text="&lt;b&gt;url&lt;/b&gt; is the location of the OPML to be fetched and parsed" created="Thu, 25 Nov 2021 17:38:25 GMT" isComment="false"/>
									</outline>
								<outline text="&lt;i&gt;Returns&lt;/i&gt;" created="Thu, 25 Nov 2021 17:39:27 GMT" isComment="true">
									<outline text="The fetched OPML as a JavaScript object" created="Thu, 25 Nov 2021 17:39:30 GMT" isComment="true"/>
									<outline text="This method returns an empty object rather than undefined" created="Sun, 28 Nov 2021 18:37:03 GMT"/>
									</outline>
								</outline>
							<outline text="" created="Sun, 28 Nov 2021 18:19:54 GMT" isComment="false"/>
							<outline text="const fetched        = http.readUrl( url )" created="Sat, 27 Nov 2021 01:08:54 GMT"/>
							<outline text="const parsed          = opml.parse( fetched )" created="Sat, 27 Nov 2021 01:10:13 GMT"/>
							<outline text="" created="Wed, 22 Dec 2021 22:13:10 GMT"/>
							<outline text="for ( const sub of parsed.opml.body.subs ) {" created="Wed, 22 Dec 2021 19:51:40 GMT">
								<outline text="if ( sub.type == &quot;include&quot; ) {" created="Wed, 22 Dec 2021 19:53:30 GMT">
									<outline text="sub.subs = opml.parse( http.readUrl( sub.url ) ).opml.body.subs" created="Wed, 22 Dec 2021 19:54:12 GMT"/>
									<outline text="}" created="Wed, 22 Dec 2021 19:54:13 GMT"/>
									</outline>
								<outline text="}" created="Wed, 22 Dec 2021 19:53:23 GMT"/>
								</outline>
							<outline text="return parsed" created="Wed, 22 Dec 2021 20:16:36 GMT"/>
							<outline text="}" created="Wed, 22 Dec 2021 20:18:31 GMT"/>
							</outline>
						</outline>
					<outline text="//    &lt;b&gt;Establish Garytown, a place to put things&lt;/b&gt;" created="Fri, 26 Nov 2021 17:45:48 GMT">
						<outline text="function Garytown() {" created="Fri, 26 Nov 2021 17:31:09 GMT">
							<outline text="&lt;b&gt;Description&lt;/b&gt;" created="Thu, 25 Nov 2021 17:40:49 GMT" isComment="true">
								<outline text="Returns a reference to a temporary place to put things." created="Sun, 28 Nov 2021 18:58:11 GMT" isComment="true"/>
								<outline text="" created="Sun, 28 Nov 2021 18:59:11 GMT" isComment="true"/>
								<outline text="&lt;i&gt;Params&lt;/i&gt;" created="Thu, 25 Nov 2021 17:37:41 GMT" isComment="true">
									<outline text="none" created="Thu, 25 Nov 2021 17:38:25 GMT" isComment="false"/>
									</outline>
								<outline text="&lt;i&gt;Modifies&lt;/i&gt;" created="Sun, 28 Nov 2021 19:02:22 GMT" isComment="true">
									<outline text="&lt;b&gt;root.temp.garytown&lt;/b&gt;" created="Sun, 28 Nov 2021 19:02:28 GMT" isComment="true"/>
									</outline>
								<outline text="&lt;i&gt;Returns&lt;/i&gt;" created="Thu, 25 Nov 2021 17:39:27 GMT" isComment="true">
									<outline text="&lt;b&gt;root.temp.garytown&lt;/b&gt;" created="Sun, 28 Nov 2021 19:02:28 GMT"/>
									</outline>
								<outline text="" created="Sun, 28 Nov 2021 18:59:59 GMT" isComment="true"/>
								<outline text="&lt;i&gt;Discussion&lt;/i&gt;" created="Sun, 28 Nov 2021 18:57:50 GMT" isComment="true">
									<outline text="Drummer uses &lt;b&gt;root&lt;/b&gt; as a place to permanently store things. You can't write to &lt;b&gt;root&lt;/b&gt;, but you can create an object called &lt;b&gt;root.temp&lt;/b&gt;, and you can write there. This is a temporary place, it gets reset when Drummer restarts." created="Fri, 26 Nov 2021 18:11:47 GMT" isComment="true"/>
									<outline text="To avoid collisions with anybody else's scripts, I am carving out a part of &lt;b&gt;root.temp&lt;/b&gt; and calling it &lt;b&gt;Garytown&lt;/b&gt;." created="Fri, 26 Nov 2021 18:12:55 GMT" isComment="true"/>
									<outline text="The convention is, at the beginning of your method, get a reference to &lt;b&gt;Garytown&lt;/b&gt;, call it &lt;b&gt;T&lt;/b&gt;, and put things there." created="Fri, 26 Nov 2021 18:13:24 GMT" isComment="true"/>
									</outline>
								</outline>
							<outline text="" created="Sun, 28 Nov 2021 19:00:05 GMT"/>
							<outline text="if ( root.temp == undefined )                     { root.temp = new Object() }" created="Sun, 21 Nov 2021 23:12:10 GMT" isComment="false"/>
							<outline text="if ( root.temp.garytown == undefined ) { root.temp.garytown = new Object() }" created="Fri, 26 Nov 2021 17:26:36 GMT"/>
							<outline text="return root.temp.garytown" created="Fri, 26 Nov 2021 17:37:06 GMT"/>
							<outline text="}" created="Fri, 26 Nov 2021 17:31:29 GMT"/>
							</outline>
						</outline>
					</outline>
				</outline>
			</outline>
		</body>
	</opml>
